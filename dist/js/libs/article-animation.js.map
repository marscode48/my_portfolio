{"version":3,"names":[],"mappings":"","sources":["libs/article-animation.js"],"sourcesContent":["export class ArticleAnimation {\n  constructor(ttl, img) {\n    this.DOM = {};\n    this.DOM.ttl = ttl instanceof HTMLElement ? ttl : document.querySelector(ttl);\n    this.chars = this.DOM.ttl.innerHTML.trim().split('');\n    this.DOM.ttl.innerHTML = this._splitText();\n    this.DOM.chars = this.DOM.ttl.querySelectorAll('.char');\n    this.DOM.img = document.querySelector(img);\n    this.animate();\n  }\n\n  _splitText() {\n    return this.chars.reduce((acc, curr) => {\n      curr = curr.replace(/\\s+/, '&nbsp;');\n      return `${acc}<span class=\"char\">${curr}</span>`;\n    }, '');\n  }\n\n  animate() {\n    const topTl = gsap.timeline({\n      scrollTrigger: {\n        trigger: '.parallax',\n        start: 'top top',\n        end: 'bottom top',\n        scrub: 1.5,\n        markers: true,\n        pin: true,\n      },\n    });\n\n    topTl.addLabel('topLabel');\n\n    // 文字アニメーション\n    this.DOM.chars.forEach((c, i) => {\n      topTl.fromTo(c, {\n        autoAlpha: 0,\n        y: 50,\n      },\n      {\n        autoAlpha: 1,\n        y: 0,\n        duration: 0.1,\n      }, `topLabel+=${i / 20}`);\n    });\n\n    // パララックス\n    topTl.fromTo(this.DOM.img, {\n      backgroundPositionY: 0,\n    },\n    {\n      backgroundPositionY: 100,\n      duration: 1,\n    }, 'topLabel');\n  }\n}\n"],"file":"article-animation.js"}